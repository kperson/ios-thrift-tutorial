/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TApplicationException.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"


@interface ChatMessage : NSObject <NSCoding> {
  NSString * __content;
  NSString * __sender;
  NSString * __recipient;

  BOOL __content_isset;
  BOOL __sender_isset;
  BOOL __recipient_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=content, setter=setContent:) NSString * content;
@property (nonatomic, retain, getter=sender, setter=setSender:) NSString * sender;
@property (nonatomic, retain, getter=recipient, setter=setRecipient:) NSString * recipient;
#endif

- (id) initWithContent: (NSString *) content sender: (NSString *) sender recipient: (NSString *) recipient;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (NSString *) content;
- (void) setContent: (NSString *) content;
- (BOOL) contentIsSet;

- (NSString *) sender;
- (void) setSender: (NSString *) sender;
- (BOOL) senderIsSet;

- (NSString *) recipient;
- (void) setRecipient: (NSString *) recipient;
- (BOOL) recipientIsSet;

@end

@protocol ChatAPI <NSObject>
- (NSString *) addNewUser: (NSString *) username;  // throws TException
- (NSString *) sendMessage: (NSString *) message : (NSString *) username : (NSString *) token;  // throws TException
- (NSArray *) getConversation: (NSString *) username : (NSString *) token;  // throws TException
- (void) registerAndroidToken: (NSString *) pushToken : (NSString *) token;  // throws TException
- (void) registeriOSToken: (NSString *) pushToken : (NSString *) token;  // throws TException
@end

@interface ChatAPIClient : NSObject <ChatAPI> {
  id <TProtocol> inProtocol;
  id <TProtocol> outProtocol;
}
- (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface ChatAPIProcessor : NSObject <TProcessor> {
  id <ChatAPI> mService;
  NSDictionary * mMethodMap;
}
- (id) initWithChatAPI: (id <ChatAPI>) service;
- (id<ChatAPI>) service;
@end

@interface chatConstants : NSObject {
}
@end
